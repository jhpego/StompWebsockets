"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
class StompSessionData {
    constructor() {
        this.id = null;
        this.authenticated = false;
        this.subscriptions = {};
        this.transactions = {};
    }
}
exports.StompSessionData = StompSessionData;
class StompError extends Error {
    constructor(message, details) {
        super(message);
        this.details = details;
    }
}
exports.StompError = StompError;
class StompFrame {
    constructor(command, headers, body) {
        this.command = command;
        this.body = body || '';
        this.headers = headers || {};
    }
    setHeader(key, value) {
        this.headers[key] = value;
    }
    toString() {
        return JSON.stringify(this);
    }
}
exports.StompFrame = StompFrame;
class StompEventEmitter {
    constructor() {
        this.emitter = new events_1.EventEmitter();
    }
    on(event, callback) {
        this.emitter.on(event, callback);
    }
    emit(event, ...args) {
        this.emitter.emit(event, ...args);
    }
}
exports.StompEventEmitter = StompEventEmitter;
/*
type StompValidator = ((frame: StompFrame) => StompValidationResult);

type StompCommands = {
    [commandName: string]: StompValidator[]
};

export type StompProtocol = {
    version: string,
    serverCommands: StompCommands,
    clientCommands: StompCommands
}

*/
